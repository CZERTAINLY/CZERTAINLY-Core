## Logging settings
# LOGGING
# Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.
#logging.config=
# Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.
#logging.file.name=/Users/pavel/servers/apache-tomcat-9.0.38/logs/raprofiles.log
# Maximum of archive log files to keep. Only supported with the default logback setup.
#logging.file.max-history=0
# Maximum log file size. Only supported with the default logback setup.
#logging.file.max-size=10MB
#logging.path= # Location of the log file. For instance, `/var/log`.
# Appender pattern for output to the console. Supported only with the default Logback setup.
logging.pattern.console=[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%t] [%logger - %line]: %m%n
#logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS # Appender pattern for log date format. Supported only with the default Logback setup.
logging.pattern.file=[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%t] [%logger - %line]: %m%n
logging.level.com.czertainly=${CZERTAINLY_LOG_LEVEL:INFO}

spring.datasource.url=${JDBC_URL}
spring.datasource.username=${JDBC_USERNAME}
spring.datasource.password=${JDBC_PASSWORD}
spring.datasource.hikari.connectionTimeout=${CONNECTION_POOL_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idleTimeout=${CONNECTION_POOL_IDLE_TIMEOUT:600000}
spring.datasource.hikari.maxLifetime=${CONNECTION_POOL_MAX_LIFETIME:1800000}
spring.datasource.hikari.maximumPoolSize=${CONNECTION_POOL_MAX_POOL_SIZE:10}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.flyway.out-of-order=true
spring.flyway.table=core_schema_history
spring.flyway.schemas=${DB_SCHEMA:core}
spring.jpa.properties.hibernate.default_schema=${DB_SCHEMA:core}

## Section server.* is related to the embedded Tomcat server only
# Define a custom port (instead of the default 8080)
server.port=${PORT:8080}
server.servlet.context-path=/api
server.ssl.enabled=${SSL_ENABLE:false}
server.ssl.client-auth=want

# Client certificate HTTP header name.
server.ssl.certificate-header-name=${HEADER_NAME:X-APP-CERTIFICATE}
# Whether client certificate is looked up in HTTP header.
server.ssl.certificate-header-enabled=${HEADER_ENABLED}

server.ssl.trust-store=${TS_PATH}
server.ssl.trust-store-type=JKS
server.ssl.trust-store-password=${TS_PASSWORD}

# Authentication and authorization
auth-service.base-url=${AUTH_SERVICE_BASE_URL}
opa.base-url=${OPA_BASE_URL}
scheduler.base-url=${SCHEDULER_BASE_URL}

spring.jpa.properties.hibernate.jdbc.batch_size=500
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.order_inserts=true

hibernate.types.print.banner=false

auditlog.enabled=${AUDITLOG_ENABLED:false}
scheduled-tasks.enabled=${SCHEDULED_TASKS_ENABLED:true}

# authentication through token
auth.token.header-name=${AUTH_TOKEN_HEADER_NAME:X-USERINFO}

# configuration of actuator
management.endpoints.web.base-path=/v1/
management.endpoints.web.exposure.include=health
management.endpoint.health.probes.enabled=true

secrets.encryption.key= ${ENCRYPTION_KEY:J$-niT.PNp^?,wF<dB;E.W}

app.version=@project.version@

# RabbitMQ configuration
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.virtual-host=${RABBITMQ_VHOST:czertainly}
spring.threads.virtual.enabled=true
spring.rabbitmq.listener.simple.default-requeue-rejected=false

# OpenTelemetry settings
otel.sdk.disabled=${OTEL_SDK_DISABLED:true}

otel.logs.exporter=${OTEL_LOGS_EXPORTER:none}
otel.metrics.exporter=${OTEL_METRICS_EXPORTER:none}
otel.traces.exporter=${OTEL_TRACES_EXPORTER:none}

otel.exporter.otlp.logs.endpoint=${OTEL_EXPORTER_OTLP_LOGS_ENDPOINT:http://localhost:4317}
otel.exporter.otlp.logs.protocol=${OTEL_EXPORTER_OTLP_LOGS_PROTOCOL:grpc}

otel.exporter.otlp.metrics.endpoint=${OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:http://localhost:4317}
otel.exporter.otlp.metrics.protocol=${OTEL_EXPORTER_OTLP_METRICS_PROTOCOL:grpc}

otel.exporter.otlp.traces.endpoint=${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:http://localhost:4317}
otel.exporter.otlp.traces.protocol=${OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:grpc}

# CMP settings
cmp.verbose=false
cmp.protocol.poll.feature.timeout=20
